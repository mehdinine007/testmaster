//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace WcfServiceLibrary.MellatReportService2 {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TransactionServiceSoapBinding", Namespace="http://www.springframework.org/schema/beans")]
    public partial class TransactionService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getRefundTransactionByOrderIdCompleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTransactionByTerminalGroupTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBillPaymentByDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRefundTransactionByRefrenceIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBillPaymentBankOperationCompleted;
        
        private System.Threading.SendOrPostCallback getShetabInfoByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTransactionByCustomerBranchIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRefundTransactionWithCommissionByDateNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTransactionStatusByTerminalIdAndOrderIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDiscountTransactionByDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRefundTransactionWithCommissionByIdNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTransactionByCustomerIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTransactionByDiscountInquiryIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCardsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTransactionByIdFromArchiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTransactionByBillIdAndPayIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTransactionByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTransactionByPayerIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRefundTransactionByRefrenceIdNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRefundTransactionWithCommissionByDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRefundTransactionByRefrenceIdCompleteFromArchiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback getInstituteTransactionByDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRefundTransactionByDateCompleteFromArchiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTransactionByTerminalGroupTypeNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBillPaymentHamrahAvalBANKOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPostDepositDraftByIbanOperationCompleted;
        
        private System.Threading.SendOrPostCallback changeRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTerminalsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRefundTransactionByDateCompleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRefundTransactionByOrderIdNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBillPaymentPSPOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTransactionStatusByIdFromArchiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTransactionByDiscountInquiryIdFromArchiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTransactionByTerminalIdAndOrderIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRefundTransactionByOrderIdCompleteFromArchiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPosTerminalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBillPaymentHamrahAvalPSPOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRefundBalanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTransactionByRRNAndTerminalIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRefundTransactionByDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUnsuccessfulTransactionsByDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback getGeneralBillInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRequestStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback getOfferTransactionByDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback getOnlineTransactionByDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTransactionByDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRefundTransactionByRefrenceIdCompleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTransactionByCustomerIdNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTransactionStatusByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRefundTransactionByOrderIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRefundTransactionByDateNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTransactionByBillIdAndPayIdFromArchiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTransactionByIdWithCardTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDepositDraftByIbanOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMobileTransactionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRefundTransactionWithCommissionByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTransactionByIdForRefundOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTransactionInquiryByCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback getChangeAccountInquiryRequestStatusOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public TransactionService() {
            this.SoapVersion = System.Web.Services.Protocols.SoapProtocolVersion.Soap12;
            this.Url = global::WcfServiceLibrary.Properties.Settings.Default.WcfServiceLibrary_MellatReportService_TransactionService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getRefundTransactionByOrderIdCompleteCompletedEventHandler getRefundTransactionByOrderIdCompleteCompleted;
        
        /// <remarks/>
        public event getTransactionByTerminalGroupTypeCompletedEventHandler getTransactionByTerminalGroupTypeCompleted;
        
        /// <remarks/>
        public event getBillPaymentByDateCompletedEventHandler getBillPaymentByDateCompleted;
        
        /// <remarks/>
        public event getRefundTransactionByRefrenceIdCompletedEventHandler getRefundTransactionByRefrenceIdCompleted;
        
        /// <remarks/>
        public event getBillPaymentBankCompletedEventHandler getBillPaymentBankCompleted;
        
        /// <remarks/>
        public event getShetabInfoByIdCompletedEventHandler getShetabInfoByIdCompleted;
        
        /// <remarks/>
        public event getTransactionByCustomerBranchIdCompletedEventHandler getTransactionByCustomerBranchIdCompleted;
        
        /// <remarks/>
        public event getRefundTransactionWithCommissionByDateNewCompletedEventHandler getRefundTransactionWithCommissionByDateNewCompleted;
        
        /// <remarks/>
        public event getTransactionStatusByTerminalIdAndOrderIdCompletedEventHandler getTransactionStatusByTerminalIdAndOrderIdCompleted;
        
        /// <remarks/>
        public event getDiscountTransactionByDateCompletedEventHandler getDiscountTransactionByDateCompleted;
        
        /// <remarks/>
        public event getRefundTransactionWithCommissionByIdNewCompletedEventHandler getRefundTransactionWithCommissionByIdNewCompleted;
        
        /// <remarks/>
        public event getTransactionByCustomerIdCompletedEventHandler getTransactionByCustomerIdCompleted;
        
        /// <remarks/>
        public event getTransactionByDiscountInquiryIdCompletedEventHandler getTransactionByDiscountInquiryIdCompleted;
        
        /// <remarks/>
        public event getCardsInfoCompletedEventHandler getCardsInfoCompleted;
        
        /// <remarks/>
        public event getTransactionByIdFromArchiveCompletedEventHandler getTransactionByIdFromArchiveCompleted;
        
        /// <remarks/>
        public event getTransactionByBillIdAndPayIdCompletedEventHandler getTransactionByBillIdAndPayIdCompleted;
        
        /// <remarks/>
        public event getTransactionByIdCompletedEventHandler getTransactionByIdCompleted;
        
        /// <remarks/>
        public event getTransactionByPayerIdCompletedEventHandler getTransactionByPayerIdCompleted;
        
        /// <remarks/>
        public event getRefundTransactionByRefrenceIdNewCompletedEventHandler getRefundTransactionByRefrenceIdNewCompleted;
        
        /// <remarks/>
        public event getRefundTransactionWithCommissionByDateCompletedEventHandler getRefundTransactionWithCommissionByDateCompleted;
        
        /// <remarks/>
        public event getRefundTransactionByRefrenceIdCompleteFromArchiveCompletedEventHandler getRefundTransactionByRefrenceIdCompleteFromArchiveCompleted;
        
        /// <remarks/>
        public event getInstituteTransactionByDateCompletedEventHandler getInstituteTransactionByDateCompleted;
        
        /// <remarks/>
        public event getRefundTransactionByDateCompleteFromArchiveCompletedEventHandler getRefundTransactionByDateCompleteFromArchiveCompleted;
        
        /// <remarks/>
        public event getTransactionByTerminalGroupTypeNewCompletedEventHandler getTransactionByTerminalGroupTypeNewCompleted;
        
        /// <remarks/>
        public event getBillPaymentHamrahAvalBANKCompletedEventHandler getBillPaymentHamrahAvalBANKCompleted;
        
        /// <remarks/>
        public event getPostDepositDraftByIbanCompletedEventHandler getPostDepositDraftByIbanCompleted;
        
        /// <remarks/>
        public event changeRequestCompletedEventHandler changeRequestCompleted;
        
        /// <remarks/>
        public event getTerminalsInfoCompletedEventHandler getTerminalsInfoCompleted;
        
        /// <remarks/>
        public event getRefundTransactionByDateCompleteCompletedEventHandler getRefundTransactionByDateCompleteCompleted;
        
        /// <remarks/>
        public event getRefundTransactionByOrderIdNewCompletedEventHandler getRefundTransactionByOrderIdNewCompleted;
        
        /// <remarks/>
        public event getBillPaymentPSPCompletedEventHandler getBillPaymentPSPCompleted;
        
        /// <remarks/>
        public event getTransactionStatusByIdFromArchiveCompletedEventHandler getTransactionStatusByIdFromArchiveCompleted;
        
        /// <remarks/>
        public event getTransactionByDiscountInquiryIdFromArchiveCompletedEventHandler getTransactionByDiscountInquiryIdFromArchiveCompleted;
        
        /// <remarks/>
        public event getTransactionByTerminalIdAndOrderIdCompletedEventHandler getTransactionByTerminalIdAndOrderIdCompleted;
        
        /// <remarks/>
        public event getRefundTransactionByOrderIdCompleteFromArchiveCompletedEventHandler getRefundTransactionByOrderIdCompleteFromArchiveCompleted;
        
        /// <remarks/>
        public event getPosTerminalRequestCompletedEventHandler getPosTerminalRequestCompleted;
        
        /// <remarks/>
        public event getBillPaymentHamrahAvalPSPCompletedEventHandler getBillPaymentHamrahAvalPSPCompleted;
        
        /// <remarks/>
        public event getRefundBalanceCompletedEventHandler getRefundBalanceCompleted;
        
        /// <remarks/>
        public event getTransactionByRRNAndTerminalIdCompletedEventHandler getTransactionByRRNAndTerminalIdCompleted;
        
        /// <remarks/>
        public event getRefundTransactionByDateCompletedEventHandler getRefundTransactionByDateCompleted;
        
        /// <remarks/>
        public event getUnsuccessfulTransactionsByDateCompletedEventHandler getUnsuccessfulTransactionsByDateCompleted;
        
        /// <remarks/>
        public event getGeneralBillInfoCompletedEventHandler getGeneralBillInfoCompleted;
        
        /// <remarks/>
        public event getRequestStatusCompletedEventHandler getRequestStatusCompleted;
        
        /// <remarks/>
        public event getOfferTransactionByDateCompletedEventHandler getOfferTransactionByDateCompleted;
        
        /// <remarks/>
        public event getOnlineTransactionByDateCompletedEventHandler getOnlineTransactionByDateCompleted;
        
        /// <remarks/>
        public event getTransactionByDateCompletedEventHandler getTransactionByDateCompleted;
        
        /// <remarks/>
        public event getRefundTransactionByRefrenceIdCompleteCompletedEventHandler getRefundTransactionByRefrenceIdCompleteCompleted;
        
        /// <remarks/>
        public event getTransactionByCustomerIdNewCompletedEventHandler getTransactionByCustomerIdNewCompleted;
        
        /// <remarks/>
        public event getTransactionStatusByIdCompletedEventHandler getTransactionStatusByIdCompleted;
        
        /// <remarks/>
        public event getRefundTransactionByOrderIdCompletedEventHandler getRefundTransactionByOrderIdCompleted;
        
        /// <remarks/>
        public event getRefundTransactionByDateNewCompletedEventHandler getRefundTransactionByDateNewCompleted;
        
        /// <remarks/>
        public event getTransactionByBillIdAndPayIdFromArchiveCompletedEventHandler getTransactionByBillIdAndPayIdFromArchiveCompleted;
        
        /// <remarks/>
        public event getTransactionByIdWithCardTypeCompletedEventHandler getTransactionByIdWithCardTypeCompleted;
        
        /// <remarks/>
        public event getDepositDraftByIbanCompletedEventHandler getDepositDraftByIbanCompleted;
        
        /// <remarks/>
        public event getMobileTransactionsCompletedEventHandler getMobileTransactionsCompleted;
        
        /// <remarks/>
        public event getRefundTransactionWithCommissionByIdCompletedEventHandler getRefundTransactionWithCommissionByIdCompleted;
        
        /// <remarks/>
        public event getTransactionByIdForRefundCompletedEventHandler getTransactionByIdForRefundCompleted;
        
        /// <remarks/>
        public event getTransactionInquiryByCustomerCompletedEventHandler getTransactionInquiryByCustomerCompleted;
        
        /// <remarks/>
        public event getChangeAccountInquiryRequestStatusCompletedEventHandler getChangeAccountInquiryRequestStatusCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getRefundTransactionByOrderIdComplete", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getRefundTransactionByOrderIdComplete(long terminalId, int date, long orderId) {
            object[] results = this.Invoke("getRefundTransactionByOrderIdComplete", new object[] {
                        terminalId,
                        date,
                        orderId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getRefundTransactionByOrderIdCompleteAsync(long terminalId, int date, long orderId) {
            this.getRefundTransactionByOrderIdCompleteAsync(terminalId, date, orderId, null);
        }
        
        /// <remarks/>
        public void getRefundTransactionByOrderIdCompleteAsync(long terminalId, int date, long orderId, object userState) {
            if ((this.getRefundTransactionByOrderIdCompleteOperationCompleted == null)) {
                this.getRefundTransactionByOrderIdCompleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRefundTransactionByOrderIdCompleteOperationCompleted);
            }
            this.InvokeAsync("getRefundTransactionByOrderIdComplete", new object[] {
                        terminalId,
                        date,
                        orderId}, this.getRefundTransactionByOrderIdCompleteOperationCompleted, userState);
        }
        
        private void OngetRefundTransactionByOrderIdCompleteOperationCompleted(object arg) {
            if ((this.getRefundTransactionByOrderIdCompleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRefundTransactionByOrderIdCompleteCompleted(this, new getRefundTransactionByOrderIdCompleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getTransactionByTerminalGroupType", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getTransactionByTerminalGroupType(long terminalGroupType, int fromDate, int toDate, long fromRecordId) {
            object[] results = this.Invoke("getTransactionByTerminalGroupType", new object[] {
                        terminalGroupType,
                        fromDate,
                        toDate,
                        fromRecordId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTransactionByTerminalGroupTypeAsync(long terminalGroupType, int fromDate, int toDate, long fromRecordId) {
            this.getTransactionByTerminalGroupTypeAsync(terminalGroupType, fromDate, toDate, fromRecordId, null);
        }
        
        /// <remarks/>
        public void getTransactionByTerminalGroupTypeAsync(long terminalGroupType, int fromDate, int toDate, long fromRecordId, object userState) {
            if ((this.getTransactionByTerminalGroupTypeOperationCompleted == null)) {
                this.getTransactionByTerminalGroupTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTransactionByTerminalGroupTypeOperationCompleted);
            }
            this.InvokeAsync("getTransactionByTerminalGroupType", new object[] {
                        terminalGroupType,
                        fromDate,
                        toDate,
                        fromRecordId}, this.getTransactionByTerminalGroupTypeOperationCompleted, userState);
        }
        
        private void OngetTransactionByTerminalGroupTypeOperationCompleted(object arg) {
            if ((this.getTransactionByTerminalGroupTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTransactionByTerminalGroupTypeCompleted(this, new getTransactionByTerminalGroupTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getBillPaymentByDate", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getBillPaymentByDate(long TerminalId, int FromDate, int ToDate) {
            object[] results = this.Invoke("getBillPaymentByDate", new object[] {
                        TerminalId,
                        FromDate,
                        ToDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getBillPaymentByDateAsync(long TerminalId, int FromDate, int ToDate) {
            this.getBillPaymentByDateAsync(TerminalId, FromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void getBillPaymentByDateAsync(long TerminalId, int FromDate, int ToDate, object userState) {
            if ((this.getBillPaymentByDateOperationCompleted == null)) {
                this.getBillPaymentByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBillPaymentByDateOperationCompleted);
            }
            this.InvokeAsync("getBillPaymentByDate", new object[] {
                        TerminalId,
                        FromDate,
                        ToDate}, this.getBillPaymentByDateOperationCompleted, userState);
        }
        
        private void OngetBillPaymentByDateOperationCompleted(object arg) {
            if ((this.getBillPaymentByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBillPaymentByDateCompleted(this, new getBillPaymentByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getRefundTransactionByRefrenceId", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getRefundTransactionByRefrenceId(long refundRefrenceId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool refundRefrenceIdSpecified) {
            object[] results = this.Invoke("getRefundTransactionByRefrenceId", new object[] {
                        refundRefrenceId,
                        refundRefrenceIdSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getRefundTransactionByRefrenceIdAsync(long refundRefrenceId, bool refundRefrenceIdSpecified) {
            this.getRefundTransactionByRefrenceIdAsync(refundRefrenceId, refundRefrenceIdSpecified, null);
        }
        
        /// <remarks/>
        public void getRefundTransactionByRefrenceIdAsync(long refundRefrenceId, bool refundRefrenceIdSpecified, object userState) {
            if ((this.getRefundTransactionByRefrenceIdOperationCompleted == null)) {
                this.getRefundTransactionByRefrenceIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRefundTransactionByRefrenceIdOperationCompleted);
            }
            this.InvokeAsync("getRefundTransactionByRefrenceId", new object[] {
                        refundRefrenceId,
                        refundRefrenceIdSpecified}, this.getRefundTransactionByRefrenceIdOperationCompleted, userState);
        }
        
        private void OngetRefundTransactionByRefrenceIdOperationCompleted(object arg) {
            if ((this.getRefundTransactionByRefrenceIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRefundTransactionByRefrenceIdCompleted(this, new getRefundTransactionByRefrenceIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getBillPaymentBank", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getBillPaymentBank(int transactionId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool transactionIdSpecified) {
            object[] results = this.Invoke("getBillPaymentBank", new object[] {
                        transactionId,
                        transactionIdSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getBillPaymentBankAsync(int transactionId, bool transactionIdSpecified) {
            this.getBillPaymentBankAsync(transactionId, transactionIdSpecified, null);
        }
        
        /// <remarks/>
        public void getBillPaymentBankAsync(int transactionId, bool transactionIdSpecified, object userState) {
            if ((this.getBillPaymentBankOperationCompleted == null)) {
                this.getBillPaymentBankOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBillPaymentBankOperationCompleted);
            }
            this.InvokeAsync("getBillPaymentBank", new object[] {
                        transactionId,
                        transactionIdSpecified}, this.getBillPaymentBankOperationCompleted, userState);
        }
        
        private void OngetBillPaymentBankOperationCompleted(object arg) {
            if ((this.getBillPaymentBankCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBillPaymentBankCompleted(this, new getBillPaymentBankCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getShetabInfoById", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getShetabInfoById(long referenceId) {
            object[] results = this.Invoke("getShetabInfoById", new object[] {
                        referenceId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getShetabInfoByIdAsync(long referenceId) {
            this.getShetabInfoByIdAsync(referenceId, null);
        }
        
        /// <remarks/>
        public void getShetabInfoByIdAsync(long referenceId, object userState) {
            if ((this.getShetabInfoByIdOperationCompleted == null)) {
                this.getShetabInfoByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetShetabInfoByIdOperationCompleted);
            }
            this.InvokeAsync("getShetabInfoById", new object[] {
                        referenceId}, this.getShetabInfoByIdOperationCompleted, userState);
        }
        
        private void OngetShetabInfoByIdOperationCompleted(object arg) {
            if ((this.getShetabInfoByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getShetabInfoByIdCompleted(this, new getShetabInfoByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getTransactionByCustomerBranchId", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getTransactionByCustomerBranchId")]
        public string getTransactionByCustomerBranchId(long customerBranchId, int fromDate, int toDate, long fromRecordId) {
            object[] results = this.Invoke("getTransactionByCustomerBranchId", new object[] {
                        customerBranchId,
                        fromDate,
                        toDate,
                        fromRecordId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTransactionByCustomerBranchIdAsync(long customerBranchId, int fromDate, int toDate, long fromRecordId) {
            this.getTransactionByCustomerBranchIdAsync(customerBranchId, fromDate, toDate, fromRecordId, null);
        }
        
        /// <remarks/>
        public void getTransactionByCustomerBranchIdAsync(long customerBranchId, int fromDate, int toDate, long fromRecordId, object userState) {
            if ((this.getTransactionByCustomerBranchIdOperationCompleted == null)) {
                this.getTransactionByCustomerBranchIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTransactionByCustomerBranchIdOperationCompleted);
            }
            this.InvokeAsync("getTransactionByCustomerBranchId", new object[] {
                        customerBranchId,
                        fromDate,
                        toDate,
                        fromRecordId}, this.getTransactionByCustomerBranchIdOperationCompleted, userState);
        }
        
        private void OngetTransactionByCustomerBranchIdOperationCompleted(object arg) {
            if ((this.getTransactionByCustomerBranchIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTransactionByCustomerBranchIdCompleted(this, new getTransactionByCustomerBranchIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getRefundTransactionWithCommissionByDateNew", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getRefundTransactionWithCommissionByDateNew")]
        public string getRefundTransactionWithCommissionByDateNew(int fromDate, [System.Xml.Serialization.XmlIgnoreAttribute()] bool fromDateSpecified, int toDate, [System.Xml.Serialization.XmlIgnoreAttribute()] bool toDateSpecified, int terminalId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool terminalIdSpecified) {
            object[] results = this.Invoke("getRefundTransactionWithCommissionByDateNew", new object[] {
                        fromDate,
                        fromDateSpecified,
                        toDate,
                        toDateSpecified,
                        terminalId,
                        terminalIdSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getRefundTransactionWithCommissionByDateNewAsync(int fromDate, bool fromDateSpecified, int toDate, bool toDateSpecified, int terminalId, bool terminalIdSpecified) {
            this.getRefundTransactionWithCommissionByDateNewAsync(fromDate, fromDateSpecified, toDate, toDateSpecified, terminalId, terminalIdSpecified, null);
        }
        
        /// <remarks/>
        public void getRefundTransactionWithCommissionByDateNewAsync(int fromDate, bool fromDateSpecified, int toDate, bool toDateSpecified, int terminalId, bool terminalIdSpecified, object userState) {
            if ((this.getRefundTransactionWithCommissionByDateNewOperationCompleted == null)) {
                this.getRefundTransactionWithCommissionByDateNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRefundTransactionWithCommissionByDateNewOperationCompleted);
            }
            this.InvokeAsync("getRefundTransactionWithCommissionByDateNew", new object[] {
                        fromDate,
                        fromDateSpecified,
                        toDate,
                        toDateSpecified,
                        terminalId,
                        terminalIdSpecified}, this.getRefundTransactionWithCommissionByDateNewOperationCompleted, userState);
        }
        
        private void OngetRefundTransactionWithCommissionByDateNewOperationCompleted(object arg) {
            if ((this.getRefundTransactionWithCommissionByDateNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRefundTransactionWithCommissionByDateNewCompleted(this, new getRefundTransactionWithCommissionByDateNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getTransactionStatusByTerminalIdAndOrderId", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getTransactionStatusByTerminalIdAndOrderId")]
        public string getTransactionStatusByTerminalIdAndOrderId(long terminalId, long orderId) {
            object[] results = this.Invoke("getTransactionStatusByTerminalIdAndOrderId", new object[] {
                        terminalId,
                        orderId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTransactionStatusByTerminalIdAndOrderIdAsync(long terminalId, long orderId) {
            this.getTransactionStatusByTerminalIdAndOrderIdAsync(terminalId, orderId, null);
        }
        
        /// <remarks/>
        public void getTransactionStatusByTerminalIdAndOrderIdAsync(long terminalId, long orderId, object userState) {
            if ((this.getTransactionStatusByTerminalIdAndOrderIdOperationCompleted == null)) {
                this.getTransactionStatusByTerminalIdAndOrderIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTransactionStatusByTerminalIdAndOrderIdOperationCompleted);
            }
            this.InvokeAsync("getTransactionStatusByTerminalIdAndOrderId", new object[] {
                        terminalId,
                        orderId}, this.getTransactionStatusByTerminalIdAndOrderIdOperationCompleted, userState);
        }
        
        private void OngetTransactionStatusByTerminalIdAndOrderIdOperationCompleted(object arg) {
            if ((this.getTransactionStatusByTerminalIdAndOrderIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTransactionStatusByTerminalIdAndOrderIdCompleted(this, new getTransactionStatusByTerminalIdAndOrderIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getDiscountTransactionByDate", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getDiscountTransactionByDate")]
        public string getDiscountTransactionByDate(long terminalId, int fromDate, int toDate) {
            object[] results = this.Invoke("getDiscountTransactionByDate", new object[] {
                        terminalId,
                        fromDate,
                        toDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getDiscountTransactionByDateAsync(long terminalId, int fromDate, int toDate) {
            this.getDiscountTransactionByDateAsync(terminalId, fromDate, toDate, null);
        }
        
        /// <remarks/>
        public void getDiscountTransactionByDateAsync(long terminalId, int fromDate, int toDate, object userState) {
            if ((this.getDiscountTransactionByDateOperationCompleted == null)) {
                this.getDiscountTransactionByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDiscountTransactionByDateOperationCompleted);
            }
            this.InvokeAsync("getDiscountTransactionByDate", new object[] {
                        terminalId,
                        fromDate,
                        toDate}, this.getDiscountTransactionByDateOperationCompleted, userState);
        }
        
        private void OngetDiscountTransactionByDateOperationCompleted(object arg) {
            if ((this.getDiscountTransactionByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDiscountTransactionByDateCompleted(this, new getDiscountTransactionByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getRefundTransactionWithCommissionByIdNew", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getRefundTransactionWithCommissionByIdNew")]
        public string getRefundTransactionWithCommissionByIdNew(long saleRefrenceId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool saleRefrenceIdSpecified) {
            object[] results = this.Invoke("getRefundTransactionWithCommissionByIdNew", new object[] {
                        saleRefrenceId,
                        saleRefrenceIdSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getRefundTransactionWithCommissionByIdNewAsync(long saleRefrenceId, bool saleRefrenceIdSpecified) {
            this.getRefundTransactionWithCommissionByIdNewAsync(saleRefrenceId, saleRefrenceIdSpecified, null);
        }
        
        /// <remarks/>
        public void getRefundTransactionWithCommissionByIdNewAsync(long saleRefrenceId, bool saleRefrenceIdSpecified, object userState) {
            if ((this.getRefundTransactionWithCommissionByIdNewOperationCompleted == null)) {
                this.getRefundTransactionWithCommissionByIdNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRefundTransactionWithCommissionByIdNewOperationCompleted);
            }
            this.InvokeAsync("getRefundTransactionWithCommissionByIdNew", new object[] {
                        saleRefrenceId,
                        saleRefrenceIdSpecified}, this.getRefundTransactionWithCommissionByIdNewOperationCompleted, userState);
        }
        
        private void OngetRefundTransactionWithCommissionByIdNewOperationCompleted(object arg) {
            if ((this.getRefundTransactionWithCommissionByIdNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRefundTransactionWithCommissionByIdNewCompleted(this, new getRefundTransactionWithCommissionByIdNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getTransactionByCustomerId", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getTransactionByCustomerId(long customerId, int fromDate, int toDate, long fromRecordId) {
            object[] results = this.Invoke("getTransactionByCustomerId", new object[] {
                        customerId,
                        fromDate,
                        toDate,
                        fromRecordId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTransactionByCustomerIdAsync(long customerId, int fromDate, int toDate, long fromRecordId) {
            this.getTransactionByCustomerIdAsync(customerId, fromDate, toDate, fromRecordId, null);
        }
        
        /// <remarks/>
        public void getTransactionByCustomerIdAsync(long customerId, int fromDate, int toDate, long fromRecordId, object userState) {
            if ((this.getTransactionByCustomerIdOperationCompleted == null)) {
                this.getTransactionByCustomerIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTransactionByCustomerIdOperationCompleted);
            }
            this.InvokeAsync("getTransactionByCustomerId", new object[] {
                        customerId,
                        fromDate,
                        toDate,
                        fromRecordId}, this.getTransactionByCustomerIdOperationCompleted, userState);
        }
        
        private void OngetTransactionByCustomerIdOperationCompleted(object arg) {
            if ((this.getTransactionByCustomerIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTransactionByCustomerIdCompleted(this, new getTransactionByCustomerIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getTransactionByDiscountInquiryId", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getTransactionByDiscountInquiryId(long discountInquiryId, int date, long PAN) {
            object[] results = this.Invoke("getTransactionByDiscountInquiryId", new object[] {
                        discountInquiryId,
                        date,
                        PAN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTransactionByDiscountInquiryIdAsync(long discountInquiryId, int date, long PAN) {
            this.getTransactionByDiscountInquiryIdAsync(discountInquiryId, date, PAN, null);
        }
        
        /// <remarks/>
        public void getTransactionByDiscountInquiryIdAsync(long discountInquiryId, int date, long PAN, object userState) {
            if ((this.getTransactionByDiscountInquiryIdOperationCompleted == null)) {
                this.getTransactionByDiscountInquiryIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTransactionByDiscountInquiryIdOperationCompleted);
            }
            this.InvokeAsync("getTransactionByDiscountInquiryId", new object[] {
                        discountInquiryId,
                        date,
                        PAN}, this.getTransactionByDiscountInquiryIdOperationCompleted, userState);
        }
        
        private void OngetTransactionByDiscountInquiryIdOperationCompleted(object arg) {
            if ((this.getTransactionByDiscountInquiryIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTransactionByDiscountInquiryIdCompleted(this, new getTransactionByDiscountInquiryIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getCardsInfo", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getCardsInfo")]
        public string getCardsInfo() {
            object[] results = this.Invoke("getCardsInfo", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCardsInfoAsync() {
            this.getCardsInfoAsync(null);
        }
        
        /// <remarks/>
        public void getCardsInfoAsync(object userState) {
            if ((this.getCardsInfoOperationCompleted == null)) {
                this.getCardsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCardsInfoOperationCompleted);
            }
            this.InvokeAsync("getCardsInfo", new object[0], this.getCardsInfoOperationCompleted, userState);
        }
        
        private void OngetCardsInfoOperationCompleted(object arg) {
            if ((this.getCardsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCardsInfoCompleted(this, new getCardsInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getTransactionByIdFromArchive", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getTransactionByIdFromArchive(long referenceId) {
            object[] results = this.Invoke("getTransactionByIdFromArchive", new object[] {
                        referenceId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTransactionByIdFromArchiveAsync(long referenceId) {
            this.getTransactionByIdFromArchiveAsync(referenceId, null);
        }
        
        /// <remarks/>
        public void getTransactionByIdFromArchiveAsync(long referenceId, object userState) {
            if ((this.getTransactionByIdFromArchiveOperationCompleted == null)) {
                this.getTransactionByIdFromArchiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTransactionByIdFromArchiveOperationCompleted);
            }
            this.InvokeAsync("getTransactionByIdFromArchive", new object[] {
                        referenceId}, this.getTransactionByIdFromArchiveOperationCompleted, userState);
        }
        
        private void OngetTransactionByIdFromArchiveOperationCompleted(object arg) {
            if ((this.getTransactionByIdFromArchiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTransactionByIdFromArchiveCompleted(this, new getTransactionByIdFromArchiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getTransactionByBillIdAndPayId", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getTransactionByBillIdAndPayId(long billId, long payId) {
            object[] results = this.Invoke("getTransactionByBillIdAndPayId", new object[] {
                        billId,
                        payId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTransactionByBillIdAndPayIdAsync(long billId, long payId) {
            this.getTransactionByBillIdAndPayIdAsync(billId, payId, null);
        }
        
        /// <remarks/>
        public void getTransactionByBillIdAndPayIdAsync(long billId, long payId, object userState) {
            if ((this.getTransactionByBillIdAndPayIdOperationCompleted == null)) {
                this.getTransactionByBillIdAndPayIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTransactionByBillIdAndPayIdOperationCompleted);
            }
            this.InvokeAsync("getTransactionByBillIdAndPayId", new object[] {
                        billId,
                        payId}, this.getTransactionByBillIdAndPayIdOperationCompleted, userState);
        }
        
        private void OngetTransactionByBillIdAndPayIdOperationCompleted(object arg) {
            if ((this.getTransactionByBillIdAndPayIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTransactionByBillIdAndPayIdCompleted(this, new getTransactionByBillIdAndPayIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getTransactionById", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getTransactionById(long referenceId) {
            object[] results = this.Invoke("getTransactionById", new object[] {
                        referenceId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTransactionByIdAsync(long referenceId) {
            this.getTransactionByIdAsync(referenceId, null);
        }
        
        /// <remarks/>
        public void getTransactionByIdAsync(long referenceId, object userState) {
            if ((this.getTransactionByIdOperationCompleted == null)) {
                this.getTransactionByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTransactionByIdOperationCompleted);
            }
            this.InvokeAsync("getTransactionById", new object[] {
                        referenceId}, this.getTransactionByIdOperationCompleted, userState);
        }
        
        private void OngetTransactionByIdOperationCompleted(object arg) {
            if ((this.getTransactionByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTransactionByIdCompleted(this, new getTransactionByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getTransactionByPayerId", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getTransactionByPayerId")]
        public string getTransactionByPayerId([System.Xml.Serialization.XmlElementAttribute(DataType="integer")] string payerId, int persianDate) {
            object[] results = this.Invoke("getTransactionByPayerId", new object[] {
                        payerId,
                        persianDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTransactionByPayerIdAsync(string payerId, int persianDate) {
            this.getTransactionByPayerIdAsync(payerId, persianDate, null);
        }
        
        /// <remarks/>
        public void getTransactionByPayerIdAsync(string payerId, int persianDate, object userState) {
            if ((this.getTransactionByPayerIdOperationCompleted == null)) {
                this.getTransactionByPayerIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTransactionByPayerIdOperationCompleted);
            }
            this.InvokeAsync("getTransactionByPayerId", new object[] {
                        payerId,
                        persianDate}, this.getTransactionByPayerIdOperationCompleted, userState);
        }
        
        private void OngetTransactionByPayerIdOperationCompleted(object arg) {
            if ((this.getTransactionByPayerIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTransactionByPayerIdCompleted(this, new getTransactionByPayerIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getRefundTransactionByRefrenceIdNew", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getRefundTransactionByRefrenceIdResultNew")]
        public string getRefundTransactionByRefrenceIdNew(long saleRefrenceId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool saleRefrenceIdSpecified) {
            object[] results = this.Invoke("getRefundTransactionByRefrenceIdNew", new object[] {
                        saleRefrenceId,
                        saleRefrenceIdSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getRefundTransactionByRefrenceIdNewAsync(long saleRefrenceId, bool saleRefrenceIdSpecified) {
            this.getRefundTransactionByRefrenceIdNewAsync(saleRefrenceId, saleRefrenceIdSpecified, null);
        }
        
        /// <remarks/>
        public void getRefundTransactionByRefrenceIdNewAsync(long saleRefrenceId, bool saleRefrenceIdSpecified, object userState) {
            if ((this.getRefundTransactionByRefrenceIdNewOperationCompleted == null)) {
                this.getRefundTransactionByRefrenceIdNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRefundTransactionByRefrenceIdNewOperationCompleted);
            }
            this.InvokeAsync("getRefundTransactionByRefrenceIdNew", new object[] {
                        saleRefrenceId,
                        saleRefrenceIdSpecified}, this.getRefundTransactionByRefrenceIdNewOperationCompleted, userState);
        }
        
        private void OngetRefundTransactionByRefrenceIdNewOperationCompleted(object arg) {
            if ((this.getRefundTransactionByRefrenceIdNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRefundTransactionByRefrenceIdNewCompleted(this, new getRefundTransactionByRefrenceIdNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getRefundTransactionWithCommissionByDate", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getRefundTransactionWithCommissionByDate")]
        public string getRefundTransactionWithCommissionByDate(int fromDate, [System.Xml.Serialization.XmlIgnoreAttribute()] bool fromDateSpecified, int toDate, [System.Xml.Serialization.XmlIgnoreAttribute()] bool toDateSpecified, int terminalId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool terminalIdSpecified) {
            object[] results = this.Invoke("getRefundTransactionWithCommissionByDate", new object[] {
                        fromDate,
                        fromDateSpecified,
                        toDate,
                        toDateSpecified,
                        terminalId,
                        terminalIdSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getRefundTransactionWithCommissionByDateAsync(int fromDate, bool fromDateSpecified, int toDate, bool toDateSpecified, int terminalId, bool terminalIdSpecified) {
            this.getRefundTransactionWithCommissionByDateAsync(fromDate, fromDateSpecified, toDate, toDateSpecified, terminalId, terminalIdSpecified, null);
        }
        
        /// <remarks/>
        public void getRefundTransactionWithCommissionByDateAsync(int fromDate, bool fromDateSpecified, int toDate, bool toDateSpecified, int terminalId, bool terminalIdSpecified, object userState) {
            if ((this.getRefundTransactionWithCommissionByDateOperationCompleted == null)) {
                this.getRefundTransactionWithCommissionByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRefundTransactionWithCommissionByDateOperationCompleted);
            }
            this.InvokeAsync("getRefundTransactionWithCommissionByDate", new object[] {
                        fromDate,
                        fromDateSpecified,
                        toDate,
                        toDateSpecified,
                        terminalId,
                        terminalIdSpecified}, this.getRefundTransactionWithCommissionByDateOperationCompleted, userState);
        }
        
        private void OngetRefundTransactionWithCommissionByDateOperationCompleted(object arg) {
            if ((this.getRefundTransactionWithCommissionByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRefundTransactionWithCommissionByDateCompleted(this, new getRefundTransactionWithCommissionByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getRefundTransactionByRefrenceIdCompleteFromArchive", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getRefundTransactionByRefrenceIdCompleteFromArchive(long refundRefrenceId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool refundRefrenceIdSpecified) {
            object[] results = this.Invoke("getRefundTransactionByRefrenceIdCompleteFromArchive", new object[] {
                        refundRefrenceId,
                        refundRefrenceIdSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getRefundTransactionByRefrenceIdCompleteFromArchiveAsync(long refundRefrenceId, bool refundRefrenceIdSpecified) {
            this.getRefundTransactionByRefrenceIdCompleteFromArchiveAsync(refundRefrenceId, refundRefrenceIdSpecified, null);
        }
        
        /// <remarks/>
        public void getRefundTransactionByRefrenceIdCompleteFromArchiveAsync(long refundRefrenceId, bool refundRefrenceIdSpecified, object userState) {
            if ((this.getRefundTransactionByRefrenceIdCompleteFromArchiveOperationCompleted == null)) {
                this.getRefundTransactionByRefrenceIdCompleteFromArchiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRefundTransactionByRefrenceIdCompleteFromArchiveOperationCompleted);
            }
            this.InvokeAsync("getRefundTransactionByRefrenceIdCompleteFromArchive", new object[] {
                        refundRefrenceId,
                        refundRefrenceIdSpecified}, this.getRefundTransactionByRefrenceIdCompleteFromArchiveOperationCompleted, userState);
        }
        
        private void OngetRefundTransactionByRefrenceIdCompleteFromArchiveOperationCompleted(object arg) {
            if ((this.getRefundTransactionByRefrenceIdCompleteFromArchiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRefundTransactionByRefrenceIdCompleteFromArchiveCompleted(this, new getRefundTransactionByRefrenceIdCompleteFromArchiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getInstituteTransactionByDate", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getInstituteTransactionByDate")]
        public string getInstituteTransactionByDate(string iban, int createDate) {
            object[] results = this.Invoke("getInstituteTransactionByDate", new object[] {
                        iban,
                        createDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getInstituteTransactionByDateAsync(string iban, int createDate) {
            this.getInstituteTransactionByDateAsync(iban, createDate, null);
        }
        
        /// <remarks/>
        public void getInstituteTransactionByDateAsync(string iban, int createDate, object userState) {
            if ((this.getInstituteTransactionByDateOperationCompleted == null)) {
                this.getInstituteTransactionByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetInstituteTransactionByDateOperationCompleted);
            }
            this.InvokeAsync("getInstituteTransactionByDate", new object[] {
                        iban,
                        createDate}, this.getInstituteTransactionByDateOperationCompleted, userState);
        }
        
        private void OngetInstituteTransactionByDateOperationCompleted(object arg) {
            if ((this.getInstituteTransactionByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getInstituteTransactionByDateCompleted(this, new getInstituteTransactionByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getRefundTransactionByDateCompleteFromArchive", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getRefundTransactionByDateCompleteFromArchive(int createDate, [System.Xml.Serialization.XmlIgnoreAttribute()] bool createDateSpecified, int terminalId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool terminalIdSpecified) {
            object[] results = this.Invoke("getRefundTransactionByDateCompleteFromArchive", new object[] {
                        createDate,
                        createDateSpecified,
                        terminalId,
                        terminalIdSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getRefundTransactionByDateCompleteFromArchiveAsync(int createDate, bool createDateSpecified, int terminalId, bool terminalIdSpecified) {
            this.getRefundTransactionByDateCompleteFromArchiveAsync(createDate, createDateSpecified, terminalId, terminalIdSpecified, null);
        }
        
        /// <remarks/>
        public void getRefundTransactionByDateCompleteFromArchiveAsync(int createDate, bool createDateSpecified, int terminalId, bool terminalIdSpecified, object userState) {
            if ((this.getRefundTransactionByDateCompleteFromArchiveOperationCompleted == null)) {
                this.getRefundTransactionByDateCompleteFromArchiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRefundTransactionByDateCompleteFromArchiveOperationCompleted);
            }
            this.InvokeAsync("getRefundTransactionByDateCompleteFromArchive", new object[] {
                        createDate,
                        createDateSpecified,
                        terminalId,
                        terminalIdSpecified}, this.getRefundTransactionByDateCompleteFromArchiveOperationCompleted, userState);
        }
        
        private void OngetRefundTransactionByDateCompleteFromArchiveOperationCompleted(object arg) {
            if ((this.getRefundTransactionByDateCompleteFromArchiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRefundTransactionByDateCompleteFromArchiveCompleted(this, new getRefundTransactionByDateCompleteFromArchiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getTransactionByTerminalGroupTypeNew", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getTransactionByTerminalGroupTypeResultNew")]
        public string getTransactionByTerminalGroupTypeNew(long terminalGroupType, int fromDate, int toDate, long fromRecordId) {
            object[] results = this.Invoke("getTransactionByTerminalGroupTypeNew", new object[] {
                        terminalGroupType,
                        fromDate,
                        toDate,
                        fromRecordId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTransactionByTerminalGroupTypeNewAsync(long terminalGroupType, int fromDate, int toDate, long fromRecordId) {
            this.getTransactionByTerminalGroupTypeNewAsync(terminalGroupType, fromDate, toDate, fromRecordId, null);
        }
        
        /// <remarks/>
        public void getTransactionByTerminalGroupTypeNewAsync(long terminalGroupType, int fromDate, int toDate, long fromRecordId, object userState) {
            if ((this.getTransactionByTerminalGroupTypeNewOperationCompleted == null)) {
                this.getTransactionByTerminalGroupTypeNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTransactionByTerminalGroupTypeNewOperationCompleted);
            }
            this.InvokeAsync("getTransactionByTerminalGroupTypeNew", new object[] {
                        terminalGroupType,
                        fromDate,
                        toDate,
                        fromRecordId}, this.getTransactionByTerminalGroupTypeNewOperationCompleted, userState);
        }
        
        private void OngetTransactionByTerminalGroupTypeNewOperationCompleted(object arg) {
            if ((this.getTransactionByTerminalGroupTypeNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTransactionByTerminalGroupTypeNewCompleted(this, new getTransactionByTerminalGroupTypeNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getBillPaymentHamrahAvalBANK", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getBillPaymentHamrahAvalBANK(long transactionId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool transactionIdSpecified) {
            object[] results = this.Invoke("getBillPaymentHamrahAvalBANK", new object[] {
                        transactionId,
                        transactionIdSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getBillPaymentHamrahAvalBANKAsync(long transactionId, bool transactionIdSpecified) {
            this.getBillPaymentHamrahAvalBANKAsync(transactionId, transactionIdSpecified, null);
        }
        
        /// <remarks/>
        public void getBillPaymentHamrahAvalBANKAsync(long transactionId, bool transactionIdSpecified, object userState) {
            if ((this.getBillPaymentHamrahAvalBANKOperationCompleted == null)) {
                this.getBillPaymentHamrahAvalBANKOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBillPaymentHamrahAvalBANKOperationCompleted);
            }
            this.InvokeAsync("getBillPaymentHamrahAvalBANK", new object[] {
                        transactionId,
                        transactionIdSpecified}, this.getBillPaymentHamrahAvalBANKOperationCompleted, userState);
        }
        
        private void OngetBillPaymentHamrahAvalBANKOperationCompleted(object arg) {
            if ((this.getBillPaymentHamrahAvalBANKCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBillPaymentHamrahAvalBANKCompleted(this, new getBillPaymentHamrahAvalBANKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getBillShaparkForPostByIbanAndDate", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getBillShaparkForPostByIbanAndDateResult")]
        public string getPostDepositDraftByIban(int draftDate, string iban) {
            object[] results = this.Invoke("getPostDepositDraftByIban", new object[] {
                        draftDate,
                        iban});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getPostDepositDraftByIbanAsync(int draftDate, string iban) {
            this.getPostDepositDraftByIbanAsync(draftDate, iban, null);
        }
        
        /// <remarks/>
        public void getPostDepositDraftByIbanAsync(int draftDate, string iban, object userState) {
            if ((this.getPostDepositDraftByIbanOperationCompleted == null)) {
                this.getPostDepositDraftByIbanOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPostDepositDraftByIbanOperationCompleted);
            }
            this.InvokeAsync("getPostDepositDraftByIban", new object[] {
                        draftDate,
                        iban}, this.getPostDepositDraftByIbanOperationCompleted, userState);
        }
        
        private void OngetPostDepositDraftByIbanOperationCompleted(object arg) {
            if ((this.getPostDepositDraftByIbanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPostDepositDraftByIbanCompleted(this, new getPostDepositDraftByIbanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/changeRequest", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("changeRequest")]
        public string changeRequest(long userId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool userIdSpecified, int terminalId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool terminalIdSpecified, long newAccountNo, [System.Xml.Serialization.XmlIgnoreAttribute()] bool newAccountNoSpecified, string currentAccount, string newIban) {
            object[] results = this.Invoke("changeRequest", new object[] {
                        userId,
                        userIdSpecified,
                        terminalId,
                        terminalIdSpecified,
                        newAccountNo,
                        newAccountNoSpecified,
                        currentAccount,
                        newIban});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void changeRequestAsync(long userId, bool userIdSpecified, int terminalId, bool terminalIdSpecified, long newAccountNo, bool newAccountNoSpecified, string currentAccount, string newIban) {
            this.changeRequestAsync(userId, userIdSpecified, terminalId, terminalIdSpecified, newAccountNo, newAccountNoSpecified, currentAccount, newIban, null);
        }
        
        /// <remarks/>
        public void changeRequestAsync(long userId, bool userIdSpecified, int terminalId, bool terminalIdSpecified, long newAccountNo, bool newAccountNoSpecified, string currentAccount, string newIban, object userState) {
            if ((this.changeRequestOperationCompleted == null)) {
                this.changeRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangeRequestOperationCompleted);
            }
            this.InvokeAsync("changeRequest", new object[] {
                        userId,
                        userIdSpecified,
                        terminalId,
                        terminalIdSpecified,
                        newAccountNo,
                        newAccountNoSpecified,
                        currentAccount,
                        newIban}, this.changeRequestOperationCompleted, userState);
        }
        
        private void OnchangeRequestOperationCompleted(object arg) {
            if ((this.changeRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.changeRequestCompleted(this, new changeRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getTerminalsInfo", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getTerminalsInfo")]
        public string getTerminalsInfo() {
            object[] results = this.Invoke("getTerminalsInfo", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTerminalsInfoAsync() {
            this.getTerminalsInfoAsync(null);
        }
        
        /// <remarks/>
        public void getTerminalsInfoAsync(object userState) {
            if ((this.getTerminalsInfoOperationCompleted == null)) {
                this.getTerminalsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTerminalsInfoOperationCompleted);
            }
            this.InvokeAsync("getTerminalsInfo", new object[0], this.getTerminalsInfoOperationCompleted, userState);
        }
        
        private void OngetTerminalsInfoOperationCompleted(object arg) {
            if ((this.getTerminalsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTerminalsInfoCompleted(this, new getTerminalsInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getRefundTransactionByDateComplete", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getRefundTransactionByDateComplete(int createDate, [System.Xml.Serialization.XmlIgnoreAttribute()] bool createDateSpecified, int terminalId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool terminalIdSpecified) {
            object[] results = this.Invoke("getRefundTransactionByDateComplete", new object[] {
                        createDate,
                        createDateSpecified,
                        terminalId,
                        terminalIdSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getRefundTransactionByDateCompleteAsync(int createDate, bool createDateSpecified, int terminalId, bool terminalIdSpecified) {
            this.getRefundTransactionByDateCompleteAsync(createDate, createDateSpecified, terminalId, terminalIdSpecified, null);
        }
        
        /// <remarks/>
        public void getRefundTransactionByDateCompleteAsync(int createDate, bool createDateSpecified, int terminalId, bool terminalIdSpecified, object userState) {
            if ((this.getRefundTransactionByDateCompleteOperationCompleted == null)) {
                this.getRefundTransactionByDateCompleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRefundTransactionByDateCompleteOperationCompleted);
            }
            this.InvokeAsync("getRefundTransactionByDateComplete", new object[] {
                        createDate,
                        createDateSpecified,
                        terminalId,
                        terminalIdSpecified}, this.getRefundTransactionByDateCompleteOperationCompleted, userState);
        }
        
        private void OngetRefundTransactionByDateCompleteOperationCompleted(object arg) {
            if ((this.getRefundTransactionByDateCompleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRefundTransactionByDateCompleteCompleted(this, new getRefundTransactionByDateCompleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getRefundTransactionByOrderIdNew", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getRefundTransactionByOrderIdNew(long terminalId, int date, long orderId) {
            object[] results = this.Invoke("getRefundTransactionByOrderIdNew", new object[] {
                        terminalId,
                        date,
                        orderId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getRefundTransactionByOrderIdNewAsync(long terminalId, int date, long orderId) {
            this.getRefundTransactionByOrderIdNewAsync(terminalId, date, orderId, null);
        }
        
        /// <remarks/>
        public void getRefundTransactionByOrderIdNewAsync(long terminalId, int date, long orderId, object userState) {
            if ((this.getRefundTransactionByOrderIdNewOperationCompleted == null)) {
                this.getRefundTransactionByOrderIdNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRefundTransactionByOrderIdNewOperationCompleted);
            }
            this.InvokeAsync("getRefundTransactionByOrderIdNew", new object[] {
                        terminalId,
                        date,
                        orderId}, this.getRefundTransactionByOrderIdNewOperationCompleted, userState);
        }
        
        private void OngetRefundTransactionByOrderIdNewOperationCompleted(object arg) {
            if ((this.getRefundTransactionByOrderIdNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRefundTransactionByOrderIdNewCompleted(this, new getRefundTransactionByOrderIdNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getBillPaymentPSP", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getBillPaymentPSP(int transactionId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool transactionIdSpecified) {
            object[] results = this.Invoke("getBillPaymentPSP", new object[] {
                        transactionId,
                        transactionIdSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getBillPaymentPSPAsync(int transactionId, bool transactionIdSpecified) {
            this.getBillPaymentPSPAsync(transactionId, transactionIdSpecified, null);
        }
        
        /// <remarks/>
        public void getBillPaymentPSPAsync(int transactionId, bool transactionIdSpecified, object userState) {
            if ((this.getBillPaymentPSPOperationCompleted == null)) {
                this.getBillPaymentPSPOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBillPaymentPSPOperationCompleted);
            }
            this.InvokeAsync("getBillPaymentPSP", new object[] {
                        transactionId,
                        transactionIdSpecified}, this.getBillPaymentPSPOperationCompleted, userState);
        }
        
        private void OngetBillPaymentPSPOperationCompleted(object arg) {
            if ((this.getBillPaymentPSPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBillPaymentPSPCompleted(this, new getBillPaymentPSPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getTransactionStatusByIdFromArchive", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getTransactionStatusByIdFromArchive")]
        public string getTransactionStatusByIdFromArchive(long referenceId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool referenceIdSpecified) {
            object[] results = this.Invoke("getTransactionStatusByIdFromArchive", new object[] {
                        referenceId,
                        referenceIdSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTransactionStatusByIdFromArchiveAsync(long referenceId, bool referenceIdSpecified) {
            this.getTransactionStatusByIdFromArchiveAsync(referenceId, referenceIdSpecified, null);
        }
        
        /// <remarks/>
        public void getTransactionStatusByIdFromArchiveAsync(long referenceId, bool referenceIdSpecified, object userState) {
            if ((this.getTransactionStatusByIdFromArchiveOperationCompleted == null)) {
                this.getTransactionStatusByIdFromArchiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTransactionStatusByIdFromArchiveOperationCompleted);
            }
            this.InvokeAsync("getTransactionStatusByIdFromArchive", new object[] {
                        referenceId,
                        referenceIdSpecified}, this.getTransactionStatusByIdFromArchiveOperationCompleted, userState);
        }
        
        private void OngetTransactionStatusByIdFromArchiveOperationCompleted(object arg) {
            if ((this.getTransactionStatusByIdFromArchiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTransactionStatusByIdFromArchiveCompleted(this, new getTransactionStatusByIdFromArchiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getTransactionByDiscountInquiryIdFromArchive", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getTransactionByDiscountInquiryIdFromArchive(long discountInquiryId, int date, long PAN) {
            object[] results = this.Invoke("getTransactionByDiscountInquiryIdFromArchive", new object[] {
                        discountInquiryId,
                        date,
                        PAN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTransactionByDiscountInquiryIdFromArchiveAsync(long discountInquiryId, int date, long PAN) {
            this.getTransactionByDiscountInquiryIdFromArchiveAsync(discountInquiryId, date, PAN, null);
        }
        
        /// <remarks/>
        public void getTransactionByDiscountInquiryIdFromArchiveAsync(long discountInquiryId, int date, long PAN, object userState) {
            if ((this.getTransactionByDiscountInquiryIdFromArchiveOperationCompleted == null)) {
                this.getTransactionByDiscountInquiryIdFromArchiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTransactionByDiscountInquiryIdFromArchiveOperationCompleted);
            }
            this.InvokeAsync("getTransactionByDiscountInquiryIdFromArchive", new object[] {
                        discountInquiryId,
                        date,
                        PAN}, this.getTransactionByDiscountInquiryIdFromArchiveOperationCompleted, userState);
        }
        
        private void OngetTransactionByDiscountInquiryIdFromArchiveOperationCompleted(object arg) {
            if ((this.getTransactionByDiscountInquiryIdFromArchiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTransactionByDiscountInquiryIdFromArchiveCompleted(this, new getTransactionByDiscountInquiryIdFromArchiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getTransactionByTerminalIdAndOrderId", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getTransactionByTerminalIdAndOrderId(long terminalId, long orderId) {
            object[] results = this.Invoke("getTransactionByTerminalIdAndOrderId", new object[] {
                        terminalId,
                        orderId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTransactionByTerminalIdAndOrderIdAsync(long terminalId, long orderId) {
            this.getTransactionByTerminalIdAndOrderIdAsync(terminalId, orderId, null);
        }
        
        /// <remarks/>
        public void getTransactionByTerminalIdAndOrderIdAsync(long terminalId, long orderId, object userState) {
            if ((this.getTransactionByTerminalIdAndOrderIdOperationCompleted == null)) {
                this.getTransactionByTerminalIdAndOrderIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTransactionByTerminalIdAndOrderIdOperationCompleted);
            }
            this.InvokeAsync("getTransactionByTerminalIdAndOrderId", new object[] {
                        terminalId,
                        orderId}, this.getTransactionByTerminalIdAndOrderIdOperationCompleted, userState);
        }
        
        private void OngetTransactionByTerminalIdAndOrderIdOperationCompleted(object arg) {
            if ((this.getTransactionByTerminalIdAndOrderIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTransactionByTerminalIdAndOrderIdCompleted(this, new getTransactionByTerminalIdAndOrderIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getRefundTransactionByOrderIdCompleteFromArchive", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getRefundTransactionByOrderIdCompleteFromArchive(long terminalId, int date, long orderId) {
            object[] results = this.Invoke("getRefundTransactionByOrderIdCompleteFromArchive", new object[] {
                        terminalId,
                        date,
                        orderId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getRefundTransactionByOrderIdCompleteFromArchiveAsync(long terminalId, int date, long orderId) {
            this.getRefundTransactionByOrderIdCompleteFromArchiveAsync(terminalId, date, orderId, null);
        }
        
        /// <remarks/>
        public void getRefundTransactionByOrderIdCompleteFromArchiveAsync(long terminalId, int date, long orderId, object userState) {
            if ((this.getRefundTransactionByOrderIdCompleteFromArchiveOperationCompleted == null)) {
                this.getRefundTransactionByOrderIdCompleteFromArchiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRefundTransactionByOrderIdCompleteFromArchiveOperationCompleted);
            }
            this.InvokeAsync("getRefundTransactionByOrderIdCompleteFromArchive", new object[] {
                        terminalId,
                        date,
                        orderId}, this.getRefundTransactionByOrderIdCompleteFromArchiveOperationCompleted, userState);
        }
        
        private void OngetRefundTransactionByOrderIdCompleteFromArchiveOperationCompleted(object arg) {
            if ((this.getRefundTransactionByOrderIdCompleteFromArchiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRefundTransactionByOrderIdCompleteFromArchiveCompleted(this, new getRefundTransactionByOrderIdCompleteFromArchiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getPosTerminalRequest", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getPosTerminalRequest(int createDate, [System.Xml.Serialization.XmlIgnoreAttribute()] bool createDateSpecified) {
            object[] results = this.Invoke("getPosTerminalRequest", new object[] {
                        createDate,
                        createDateSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getPosTerminalRequestAsync(int createDate, bool createDateSpecified) {
            this.getPosTerminalRequestAsync(createDate, createDateSpecified, null);
        }
        
        /// <remarks/>
        public void getPosTerminalRequestAsync(int createDate, bool createDateSpecified, object userState) {
            if ((this.getPosTerminalRequestOperationCompleted == null)) {
                this.getPosTerminalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPosTerminalRequestOperationCompleted);
            }
            this.InvokeAsync("getPosTerminalRequest", new object[] {
                        createDate,
                        createDateSpecified}, this.getPosTerminalRequestOperationCompleted, userState);
        }
        
        private void OngetPosTerminalRequestOperationCompleted(object arg) {
            if ((this.getPosTerminalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPosTerminalRequestCompleted(this, new getPosTerminalRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getBillPaymentHamrahAvalPSP", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getBillPaymentHamrahAvalPSP(long transactionId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool transactionIdSpecified) {
            object[] results = this.Invoke("getBillPaymentHamrahAvalPSP", new object[] {
                        transactionId,
                        transactionIdSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getBillPaymentHamrahAvalPSPAsync(long transactionId, bool transactionIdSpecified) {
            this.getBillPaymentHamrahAvalPSPAsync(transactionId, transactionIdSpecified, null);
        }
        
        /// <remarks/>
        public void getBillPaymentHamrahAvalPSPAsync(long transactionId, bool transactionIdSpecified, object userState) {
            if ((this.getBillPaymentHamrahAvalPSPOperationCompleted == null)) {
                this.getBillPaymentHamrahAvalPSPOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBillPaymentHamrahAvalPSPOperationCompleted);
            }
            this.InvokeAsync("getBillPaymentHamrahAvalPSP", new object[] {
                        transactionId,
                        transactionIdSpecified}, this.getBillPaymentHamrahAvalPSPOperationCompleted, userState);
        }
        
        private void OngetBillPaymentHamrahAvalPSPOperationCompleted(object arg) {
            if ((this.getBillPaymentHamrahAvalPSPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBillPaymentHamrahAvalPSPCompleted(this, new getBillPaymentHamrahAvalPSPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getRefundBalance", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getRefundBalance(int terminalId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool terminalIdSpecified) {
            object[] results = this.Invoke("getRefundBalance", new object[] {
                        terminalId,
                        terminalIdSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getRefundBalanceAsync(int terminalId, bool terminalIdSpecified) {
            this.getRefundBalanceAsync(terminalId, terminalIdSpecified, null);
        }
        
        /// <remarks/>
        public void getRefundBalanceAsync(int terminalId, bool terminalIdSpecified, object userState) {
            if ((this.getRefundBalanceOperationCompleted == null)) {
                this.getRefundBalanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRefundBalanceOperationCompleted);
            }
            this.InvokeAsync("getRefundBalance", new object[] {
                        terminalId,
                        terminalIdSpecified}, this.getRefundBalanceOperationCompleted, userState);
        }
        
        private void OngetRefundBalanceOperationCompleted(object arg) {
            if ((this.getRefundBalanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRefundBalanceCompleted(this, new getRefundBalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getTransactionByRRNAndTerminalId", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getTransactionByRRNAndTerminalId(long terminalId, long rrn) {
            object[] results = this.Invoke("getTransactionByRRNAndTerminalId", new object[] {
                        terminalId,
                        rrn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTransactionByRRNAndTerminalIdAsync(long terminalId, long rrn) {
            this.getTransactionByRRNAndTerminalIdAsync(terminalId, rrn, null);
        }
        
        /// <remarks/>
        public void getTransactionByRRNAndTerminalIdAsync(long terminalId, long rrn, object userState) {
            if ((this.getTransactionByRRNAndTerminalIdOperationCompleted == null)) {
                this.getTransactionByRRNAndTerminalIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTransactionByRRNAndTerminalIdOperationCompleted);
            }
            this.InvokeAsync("getTransactionByRRNAndTerminalId", new object[] {
                        terminalId,
                        rrn}, this.getTransactionByRRNAndTerminalIdOperationCompleted, userState);
        }
        
        private void OngetTransactionByRRNAndTerminalIdOperationCompleted(object arg) {
            if ((this.getTransactionByRRNAndTerminalIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTransactionByRRNAndTerminalIdCompleted(this, new getTransactionByRRNAndTerminalIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getRefundTransactionByDate", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getRefundTransactionByDate(int createDate, [System.Xml.Serialization.XmlIgnoreAttribute()] bool createDateSpecified, int terminalId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool terminalIdSpecified) {
            object[] results = this.Invoke("getRefundTransactionByDate", new object[] {
                        createDate,
                        createDateSpecified,
                        terminalId,
                        terminalIdSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getRefundTransactionByDateAsync(int createDate, bool createDateSpecified, int terminalId, bool terminalIdSpecified) {
            this.getRefundTransactionByDateAsync(createDate, createDateSpecified, terminalId, terminalIdSpecified, null);
        }
        
        /// <remarks/>
        public void getRefundTransactionByDateAsync(int createDate, bool createDateSpecified, int terminalId, bool terminalIdSpecified, object userState) {
            if ((this.getRefundTransactionByDateOperationCompleted == null)) {
                this.getRefundTransactionByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRefundTransactionByDateOperationCompleted);
            }
            this.InvokeAsync("getRefundTransactionByDate", new object[] {
                        createDate,
                        createDateSpecified,
                        terminalId,
                        terminalIdSpecified}, this.getRefundTransactionByDateOperationCompleted, userState);
        }
        
        private void OngetRefundTransactionByDateOperationCompleted(object arg) {
            if ((this.getRefundTransactionByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRefundTransactionByDateCompleted(this, new getRefundTransactionByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getUnsuccessfulTransactionsByDate", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getUnsuccessfulTransactionsByDate")]
        public string getUnsuccessfulTransactionsByDate(long terminalId, int fromDate, int toDate) {
            object[] results = this.Invoke("getUnsuccessfulTransactionsByDate", new object[] {
                        terminalId,
                        fromDate,
                        toDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getUnsuccessfulTransactionsByDateAsync(long terminalId, int fromDate, int toDate) {
            this.getUnsuccessfulTransactionsByDateAsync(terminalId, fromDate, toDate, null);
        }
        
        /// <remarks/>
        public void getUnsuccessfulTransactionsByDateAsync(long terminalId, int fromDate, int toDate, object userState) {
            if ((this.getUnsuccessfulTransactionsByDateOperationCompleted == null)) {
                this.getUnsuccessfulTransactionsByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUnsuccessfulTransactionsByDateOperationCompleted);
            }
            this.InvokeAsync("getUnsuccessfulTransactionsByDate", new object[] {
                        terminalId,
                        fromDate,
                        toDate}, this.getUnsuccessfulTransactionsByDateOperationCompleted, userState);
        }
        
        private void OngetUnsuccessfulTransactionsByDateOperationCompleted(object arg) {
            if ((this.getUnsuccessfulTransactionsByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUnsuccessfulTransactionsByDateCompleted(this, new getUnsuccessfulTransactionsByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getTransactionGeneralByBillIdAndPayId", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getGeneralBillInfo")]
        public string getGeneralBillInfo(long billId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool billIdSpecified, long payId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool payIdSpecified) {
            object[] results = this.Invoke("getGeneralBillInfo", new object[] {
                        billId,
                        billIdSpecified,
                        payId,
                        payIdSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getGeneralBillInfoAsync(long billId, bool billIdSpecified, long payId, bool payIdSpecified) {
            this.getGeneralBillInfoAsync(billId, billIdSpecified, payId, payIdSpecified, null);
        }
        
        /// <remarks/>
        public void getGeneralBillInfoAsync(long billId, bool billIdSpecified, long payId, bool payIdSpecified, object userState) {
            if ((this.getGeneralBillInfoOperationCompleted == null)) {
                this.getGeneralBillInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGeneralBillInfoOperationCompleted);
            }
            this.InvokeAsync("getGeneralBillInfo", new object[] {
                        billId,
                        billIdSpecified,
                        payId,
                        payIdSpecified}, this.getGeneralBillInfoOperationCompleted, userState);
        }
        
        private void OngetGeneralBillInfoOperationCompleted(object arg) {
            if ((this.getGeneralBillInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGeneralBillInfoCompleted(this, new getGeneralBillInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getRequestStatus", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getRequestStatus(int createDate, [System.Xml.Serialization.XmlIgnoreAttribute()] bool createDateSpecified, string nationalityCode, short terminalType) {
            object[] results = this.Invoke("getRequestStatus", new object[] {
                        createDate,
                        createDateSpecified,
                        nationalityCode,
                        terminalType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getRequestStatusAsync(int createDate, bool createDateSpecified, string nationalityCode, short terminalType) {
            this.getRequestStatusAsync(createDate, createDateSpecified, nationalityCode, terminalType, null);
        }
        
        /// <remarks/>
        public void getRequestStatusAsync(int createDate, bool createDateSpecified, string nationalityCode, short terminalType, object userState) {
            if ((this.getRequestStatusOperationCompleted == null)) {
                this.getRequestStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRequestStatusOperationCompleted);
            }
            this.InvokeAsync("getRequestStatus", new object[] {
                        createDate,
                        createDateSpecified,
                        nationalityCode,
                        terminalType}, this.getRequestStatusOperationCompleted, userState);
        }
        
        private void OngetRequestStatusOperationCompleted(object arg) {
            if ((this.getRequestStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRequestStatusCompleted(this, new getRequestStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getOfferTransactionByDate", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getOfferTransactionByDate(long terminalId, int fromDate, int toDate) {
            object[] results = this.Invoke("getOfferTransactionByDate", new object[] {
                        terminalId,
                        fromDate,
                        toDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getOfferTransactionByDateAsync(long terminalId, int fromDate, int toDate) {
            this.getOfferTransactionByDateAsync(terminalId, fromDate, toDate, null);
        }
        
        /// <remarks/>
        public void getOfferTransactionByDateAsync(long terminalId, int fromDate, int toDate, object userState) {
            if ((this.getOfferTransactionByDateOperationCompleted == null)) {
                this.getOfferTransactionByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetOfferTransactionByDateOperationCompleted);
            }
            this.InvokeAsync("getOfferTransactionByDate", new object[] {
                        terminalId,
                        fromDate,
                        toDate}, this.getOfferTransactionByDateOperationCompleted, userState);
        }
        
        private void OngetOfferTransactionByDateOperationCompleted(object arg) {
            if ((this.getOfferTransactionByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getOfferTransactionByDateCompleted(this, new getOfferTransactionByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getOnlineTransactionByDate", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getOnlineTransactionByDate")]
        public string getOnlineTransactionByDate(long terminalId, int date, long afterRowNumber) {
            object[] results = this.Invoke("getOnlineTransactionByDate", new object[] {
                        terminalId,
                        date,
                        afterRowNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getOnlineTransactionByDateAsync(long terminalId, int date, long afterRowNumber) {
            this.getOnlineTransactionByDateAsync(terminalId, date, afterRowNumber, null);
        }
        
        /// <remarks/>
        public void getOnlineTransactionByDateAsync(long terminalId, int date, long afterRowNumber, object userState) {
            if ((this.getOnlineTransactionByDateOperationCompleted == null)) {
                this.getOnlineTransactionByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetOnlineTransactionByDateOperationCompleted);
            }
            this.InvokeAsync("getOnlineTransactionByDate", new object[] {
                        terminalId,
                        date,
                        afterRowNumber}, this.getOnlineTransactionByDateOperationCompleted, userState);
        }
        
        private void OngetOnlineTransactionByDateOperationCompleted(object arg) {
            if ((this.getOnlineTransactionByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getOnlineTransactionByDateCompleted(this, new getOnlineTransactionByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getTransactionByDate", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getTransactionByDate(long TerminalId, int FromDate, int ToDate) {
            object[] results = this.Invoke("getTransactionByDate", new object[] {
                        TerminalId,
                        FromDate,
                        ToDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTransactionByDateAsync(long TerminalId, int FromDate, int ToDate) {
            this.getTransactionByDateAsync(TerminalId, FromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void getTransactionByDateAsync(long TerminalId, int FromDate, int ToDate, object userState) {
            if ((this.getTransactionByDateOperationCompleted == null)) {
                this.getTransactionByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTransactionByDateOperationCompleted);
            }
            this.InvokeAsync("getTransactionByDate", new object[] {
                        TerminalId,
                        FromDate,
                        ToDate}, this.getTransactionByDateOperationCompleted, userState);
        }
        
        private void OngetTransactionByDateOperationCompleted(object arg) {
            if ((this.getTransactionByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTransactionByDateCompleted(this, new getTransactionByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getRefundTransactionByRefrenceIdComplete", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getRefundTransactionByRefrenceIdComplete(long refundRefrenceId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool refundRefrenceIdSpecified) {
            object[] results = this.Invoke("getRefundTransactionByRefrenceIdComplete", new object[] {
                        refundRefrenceId,
                        refundRefrenceIdSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getRefundTransactionByRefrenceIdCompleteAsync(long refundRefrenceId, bool refundRefrenceIdSpecified) {
            this.getRefundTransactionByRefrenceIdCompleteAsync(refundRefrenceId, refundRefrenceIdSpecified, null);
        }
        
        /// <remarks/>
        public void getRefundTransactionByRefrenceIdCompleteAsync(long refundRefrenceId, bool refundRefrenceIdSpecified, object userState) {
            if ((this.getRefundTransactionByRefrenceIdCompleteOperationCompleted == null)) {
                this.getRefundTransactionByRefrenceIdCompleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRefundTransactionByRefrenceIdCompleteOperationCompleted);
            }
            this.InvokeAsync("getRefundTransactionByRefrenceIdComplete", new object[] {
                        refundRefrenceId,
                        refundRefrenceIdSpecified}, this.getRefundTransactionByRefrenceIdCompleteOperationCompleted, userState);
        }
        
        private void OngetRefundTransactionByRefrenceIdCompleteOperationCompleted(object arg) {
            if ((this.getRefundTransactionByRefrenceIdCompleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRefundTransactionByRefrenceIdCompleteCompleted(this, new getRefundTransactionByRefrenceIdCompleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getTransactionByCustomerIdNew", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getTransactionByCustomerIdResultNew")]
        public string getTransactionByCustomerIdNew(long customerId, int fromDate, int toDate, long fromRecordId) {
            object[] results = this.Invoke("getTransactionByCustomerIdNew", new object[] {
                        customerId,
                        fromDate,
                        toDate,
                        fromRecordId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTransactionByCustomerIdNewAsync(long customerId, int fromDate, int toDate, long fromRecordId) {
            this.getTransactionByCustomerIdNewAsync(customerId, fromDate, toDate, fromRecordId, null);
        }
        
        /// <remarks/>
        public void getTransactionByCustomerIdNewAsync(long customerId, int fromDate, int toDate, long fromRecordId, object userState) {
            if ((this.getTransactionByCustomerIdNewOperationCompleted == null)) {
                this.getTransactionByCustomerIdNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTransactionByCustomerIdNewOperationCompleted);
            }
            this.InvokeAsync("getTransactionByCustomerIdNew", new object[] {
                        customerId,
                        fromDate,
                        toDate,
                        fromRecordId}, this.getTransactionByCustomerIdNewOperationCompleted, userState);
        }
        
        private void OngetTransactionByCustomerIdNewOperationCompleted(object arg) {
            if ((this.getTransactionByCustomerIdNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTransactionByCustomerIdNewCompleted(this, new getTransactionByCustomerIdNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getTransactionStatusById", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getTransactionStatusById")]
        public string getTransactionStatusById(long referenceId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool referenceIdSpecified) {
            object[] results = this.Invoke("getTransactionStatusById", new object[] {
                        referenceId,
                        referenceIdSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTransactionStatusByIdAsync(long referenceId, bool referenceIdSpecified) {
            this.getTransactionStatusByIdAsync(referenceId, referenceIdSpecified, null);
        }
        
        /// <remarks/>
        public void getTransactionStatusByIdAsync(long referenceId, bool referenceIdSpecified, object userState) {
            if ((this.getTransactionStatusByIdOperationCompleted == null)) {
                this.getTransactionStatusByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTransactionStatusByIdOperationCompleted);
            }
            this.InvokeAsync("getTransactionStatusById", new object[] {
                        referenceId,
                        referenceIdSpecified}, this.getTransactionStatusByIdOperationCompleted, userState);
        }
        
        private void OngetTransactionStatusByIdOperationCompleted(object arg) {
            if ((this.getTransactionStatusByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTransactionStatusByIdCompleted(this, new getTransactionStatusByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getRefundTransactionByOrderId", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getRefundTransactionByOrderId")]
        public string getRefundTransactionByOrderId(long orderId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderIdSpecified) {
            object[] results = this.Invoke("getRefundTransactionByOrderId", new object[] {
                        orderId,
                        orderIdSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getRefundTransactionByOrderIdAsync(long orderId, bool orderIdSpecified) {
            this.getRefundTransactionByOrderIdAsync(orderId, orderIdSpecified, null);
        }
        
        /// <remarks/>
        public void getRefundTransactionByOrderIdAsync(long orderId, bool orderIdSpecified, object userState) {
            if ((this.getRefundTransactionByOrderIdOperationCompleted == null)) {
                this.getRefundTransactionByOrderIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRefundTransactionByOrderIdOperationCompleted);
            }
            this.InvokeAsync("getRefundTransactionByOrderId", new object[] {
                        orderId,
                        orderIdSpecified}, this.getRefundTransactionByOrderIdOperationCompleted, userState);
        }
        
        private void OngetRefundTransactionByOrderIdOperationCompleted(object arg) {
            if ((this.getRefundTransactionByOrderIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRefundTransactionByOrderIdCompleted(this, new getRefundTransactionByOrderIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getRefundTransactionByDateNew", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getRefundTransactionByDateResultNew")]
        public string getRefundTransactionByDateNew(int createDate, [System.Xml.Serialization.XmlIgnoreAttribute()] bool createDateSpecified, int terminalId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool terminalIdSpecified) {
            object[] results = this.Invoke("getRefundTransactionByDateNew", new object[] {
                        createDate,
                        createDateSpecified,
                        terminalId,
                        terminalIdSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getRefundTransactionByDateNewAsync(int createDate, bool createDateSpecified, int terminalId, bool terminalIdSpecified) {
            this.getRefundTransactionByDateNewAsync(createDate, createDateSpecified, terminalId, terminalIdSpecified, null);
        }
        
        /// <remarks/>
        public void getRefundTransactionByDateNewAsync(int createDate, bool createDateSpecified, int terminalId, bool terminalIdSpecified, object userState) {
            if ((this.getRefundTransactionByDateNewOperationCompleted == null)) {
                this.getRefundTransactionByDateNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRefundTransactionByDateNewOperationCompleted);
            }
            this.InvokeAsync("getRefundTransactionByDateNew", new object[] {
                        createDate,
                        createDateSpecified,
                        terminalId,
                        terminalIdSpecified}, this.getRefundTransactionByDateNewOperationCompleted, userState);
        }
        
        private void OngetRefundTransactionByDateNewOperationCompleted(object arg) {
            if ((this.getRefundTransactionByDateNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRefundTransactionByDateNewCompleted(this, new getRefundTransactionByDateNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getTransactionByBillIdAndPayIdFromArchive", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getTransactionByBillIdAndPayIdFromArchive(long billId, long payId) {
            object[] results = this.Invoke("getTransactionByBillIdAndPayIdFromArchive", new object[] {
                        billId,
                        payId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTransactionByBillIdAndPayIdFromArchiveAsync(long billId, long payId) {
            this.getTransactionByBillIdAndPayIdFromArchiveAsync(billId, payId, null);
        }
        
        /// <remarks/>
        public void getTransactionByBillIdAndPayIdFromArchiveAsync(long billId, long payId, object userState) {
            if ((this.getTransactionByBillIdAndPayIdFromArchiveOperationCompleted == null)) {
                this.getTransactionByBillIdAndPayIdFromArchiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTransactionByBillIdAndPayIdFromArchiveOperationCompleted);
            }
            this.InvokeAsync("getTransactionByBillIdAndPayIdFromArchive", new object[] {
                        billId,
                        payId}, this.getTransactionByBillIdAndPayIdFromArchiveOperationCompleted, userState);
        }
        
        private void OngetTransactionByBillIdAndPayIdFromArchiveOperationCompleted(object arg) {
            if ((this.getTransactionByBillIdAndPayIdFromArchiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTransactionByBillIdAndPayIdFromArchiveCompleted(this, new getTransactionByBillIdAndPayIdFromArchiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getTransactionByIdWithCardType", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getTransactionByIdWithCardType")]
        public string getTransactionByIdWithCardType(long referenceId) {
            object[] results = this.Invoke("getTransactionByIdWithCardType", new object[] {
                        referenceId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTransactionByIdWithCardTypeAsync(long referenceId) {
            this.getTransactionByIdWithCardTypeAsync(referenceId, null);
        }
        
        /// <remarks/>
        public void getTransactionByIdWithCardTypeAsync(long referenceId, object userState) {
            if ((this.getTransactionByIdWithCardTypeOperationCompleted == null)) {
                this.getTransactionByIdWithCardTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTransactionByIdWithCardTypeOperationCompleted);
            }
            this.InvokeAsync("getTransactionByIdWithCardType", new object[] {
                        referenceId}, this.getTransactionByIdWithCardTypeOperationCompleted, userState);
        }
        
        private void OngetTransactionByIdWithCardTypeOperationCompleted(object arg) {
            if ((this.getTransactionByIdWithCardTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTransactionByIdWithCardTypeCompleted(this, new getTransactionByIdWithCardTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getDepositDraftByIban", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getDepositDraftByIban(int DraftDate, string Iban) {
            object[] results = this.Invoke("getDepositDraftByIban", new object[] {
                        DraftDate,
                        Iban});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getDepositDraftByIbanAsync(int DraftDate, string Iban) {
            this.getDepositDraftByIbanAsync(DraftDate, Iban, null);
        }
        
        /// <remarks/>
        public void getDepositDraftByIbanAsync(int DraftDate, string Iban, object userState) {
            if ((this.getDepositDraftByIbanOperationCompleted == null)) {
                this.getDepositDraftByIbanOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDepositDraftByIbanOperationCompleted);
            }
            this.InvokeAsync("getDepositDraftByIban", new object[] {
                        DraftDate,
                        Iban}, this.getDepositDraftByIbanOperationCompleted, userState);
        }
        
        private void OngetDepositDraftByIbanOperationCompleted(object arg) {
            if ((this.getDepositDraftByIbanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDepositDraftByIbanCompleted(this, new getDepositDraftByIbanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getMobileTransactions", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getMobileTransactions")]
        public string getMobileTransactions(int terminalId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool terminalIdSpecified, int createDate, [System.Xml.Serialization.XmlIgnoreAttribute()] bool createDateSpecified, long mobile) {
            object[] results = this.Invoke("getMobileTransactions", new object[] {
                        terminalId,
                        terminalIdSpecified,
                        createDate,
                        createDateSpecified,
                        mobile});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getMobileTransactionsAsync(int terminalId, bool terminalIdSpecified, int createDate, bool createDateSpecified, long mobile) {
            this.getMobileTransactionsAsync(terminalId, terminalIdSpecified, createDate, createDateSpecified, mobile, null);
        }
        
        /// <remarks/>
        public void getMobileTransactionsAsync(int terminalId, bool terminalIdSpecified, int createDate, bool createDateSpecified, long mobile, object userState) {
            if ((this.getMobileTransactionsOperationCompleted == null)) {
                this.getMobileTransactionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMobileTransactionsOperationCompleted);
            }
            this.InvokeAsync("getMobileTransactions", new object[] {
                        terminalId,
                        terminalIdSpecified,
                        createDate,
                        createDateSpecified,
                        mobile}, this.getMobileTransactionsOperationCompleted, userState);
        }
        
        private void OngetMobileTransactionsOperationCompleted(object arg) {
            if ((this.getMobileTransactionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMobileTransactionsCompleted(this, new getMobileTransactionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getRefundTransactionWithCommissionById", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getRefundTransactionWithCommissionById")]
        public string getRefundTransactionWithCommissionById(long refundRefrenceId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool refundRefrenceIdSpecified) {
            object[] results = this.Invoke("getRefundTransactionWithCommissionById", new object[] {
                        refundRefrenceId,
                        refundRefrenceIdSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getRefundTransactionWithCommissionByIdAsync(long refundRefrenceId, bool refundRefrenceIdSpecified) {
            this.getRefundTransactionWithCommissionByIdAsync(refundRefrenceId, refundRefrenceIdSpecified, null);
        }
        
        /// <remarks/>
        public void getRefundTransactionWithCommissionByIdAsync(long refundRefrenceId, bool refundRefrenceIdSpecified, object userState) {
            if ((this.getRefundTransactionWithCommissionByIdOperationCompleted == null)) {
                this.getRefundTransactionWithCommissionByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRefundTransactionWithCommissionByIdOperationCompleted);
            }
            this.InvokeAsync("getRefundTransactionWithCommissionById", new object[] {
                        refundRefrenceId,
                        refundRefrenceIdSpecified}, this.getRefundTransactionWithCommissionByIdOperationCompleted, userState);
        }
        
        private void OngetRefundTransactionWithCommissionByIdOperationCompleted(object arg) {
            if ((this.getRefundTransactionWithCommissionByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRefundTransactionWithCommissionByIdCompleted(this, new getRefundTransactionWithCommissionByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getTransactionByIdForRefund", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getTransactionByIdForRefund(long referenceId) {
            object[] results = this.Invoke("getTransactionByIdForRefund", new object[] {
                        referenceId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTransactionByIdForRefundAsync(long referenceId) {
            this.getTransactionByIdForRefundAsync(referenceId, null);
        }
        
        /// <remarks/>
        public void getTransactionByIdForRefundAsync(long referenceId, object userState) {
            if ((this.getTransactionByIdForRefundOperationCompleted == null)) {
                this.getTransactionByIdForRefundOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTransactionByIdForRefundOperationCompleted);
            }
            this.InvokeAsync("getTransactionByIdForRefund", new object[] {
                        referenceId}, this.getTransactionByIdForRefundOperationCompleted, userState);
        }
        
        private void OngetTransactionByIdForRefundOperationCompleted(object arg) {
            if ((this.getTransactionByIdForRefundCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTransactionByIdForRefundCompleted(this, new getTransactionByIdForRefundCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getTransactionInquiryByCustomer", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getTransactionInquiryByCustomer")]
        public string getTransactionInquiryByCustomer(long transactionId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool transactionIdSpecified, string transactionDate, int terminalId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool terminalIdSpecified) {
            object[] results = this.Invoke("getTransactionInquiryByCustomer", new object[] {
                        transactionId,
                        transactionIdSpecified,
                        transactionDate,
                        terminalId,
                        terminalIdSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTransactionInquiryByCustomerAsync(long transactionId, bool transactionIdSpecified, string transactionDate, int terminalId, bool terminalIdSpecified) {
            this.getTransactionInquiryByCustomerAsync(transactionId, transactionIdSpecified, transactionDate, terminalId, terminalIdSpecified, null);
        }
        
        /// <remarks/>
        public void getTransactionInquiryByCustomerAsync(long transactionId, bool transactionIdSpecified, string transactionDate, int terminalId, bool terminalIdSpecified, object userState) {
            if ((this.getTransactionInquiryByCustomerOperationCompleted == null)) {
                this.getTransactionInquiryByCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTransactionInquiryByCustomerOperationCompleted);
            }
            this.InvokeAsync("getTransactionInquiryByCustomer", new object[] {
                        transactionId,
                        transactionIdSpecified,
                        transactionDate,
                        terminalId,
                        terminalIdSpecified}, this.getTransactionInquiryByCustomerOperationCompleted, userState);
        }
        
        private void OngetTransactionInquiryByCustomerOperationCompleted(object arg) {
            if ((this.getTransactionInquiryByCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTransactionInquiryByCustomerCompleted(this, new getTransactionInquiryByCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bpmellat.co/getChangeAccountInquiryRequestStatus", RequestNamespace="http://bpmellat.co/", ResponseNamespace="http://bpmellat.co/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getChangeAccountInquiryRequestStatus(int terminalId, string oldValue, string oldIban) {
            object[] results = this.Invoke("getChangeAccountInquiryRequestStatus", new object[] {
                        terminalId,
                        oldValue,
                        oldIban});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getChangeAccountInquiryRequestStatusAsync(int terminalId, string oldValue, string oldIban) {
            this.getChangeAccountInquiryRequestStatusAsync(terminalId, oldValue, oldIban, null);
        }
        
        /// <remarks/>
        public void getChangeAccountInquiryRequestStatusAsync(int terminalId, string oldValue, string oldIban, object userState) {
            if ((this.getChangeAccountInquiryRequestStatusOperationCompleted == null)) {
                this.getChangeAccountInquiryRequestStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetChangeAccountInquiryRequestStatusOperationCompleted);
            }
            this.InvokeAsync("getChangeAccountInquiryRequestStatus", new object[] {
                        terminalId,
                        oldValue,
                        oldIban}, this.getChangeAccountInquiryRequestStatusOperationCompleted, userState);
        }
        
        private void OngetChangeAccountInquiryRequestStatusOperationCompleted(object arg) {
            if ((this.getChangeAccountInquiryRequestStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getChangeAccountInquiryRequestStatusCompleted(this, new getChangeAccountInquiryRequestStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getRefundTransactionByOrderIdCompleteCompletedEventHandler(object sender, getRefundTransactionByOrderIdCompleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRefundTransactionByOrderIdCompleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRefundTransactionByOrderIdCompleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getTransactionByTerminalGroupTypeCompletedEventHandler(object sender, getTransactionByTerminalGroupTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTransactionByTerminalGroupTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTransactionByTerminalGroupTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getBillPaymentByDateCompletedEventHandler(object sender, getBillPaymentByDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBillPaymentByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBillPaymentByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getRefundTransactionByRefrenceIdCompletedEventHandler(object sender, getRefundTransactionByRefrenceIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRefundTransactionByRefrenceIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRefundTransactionByRefrenceIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getBillPaymentBankCompletedEventHandler(object sender, getBillPaymentBankCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBillPaymentBankCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBillPaymentBankCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getShetabInfoByIdCompletedEventHandler(object sender, getShetabInfoByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getShetabInfoByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getShetabInfoByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getTransactionByCustomerBranchIdCompletedEventHandler(object sender, getTransactionByCustomerBranchIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTransactionByCustomerBranchIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTransactionByCustomerBranchIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getRefundTransactionWithCommissionByDateNewCompletedEventHandler(object sender, getRefundTransactionWithCommissionByDateNewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRefundTransactionWithCommissionByDateNewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRefundTransactionWithCommissionByDateNewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getTransactionStatusByTerminalIdAndOrderIdCompletedEventHandler(object sender, getTransactionStatusByTerminalIdAndOrderIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTransactionStatusByTerminalIdAndOrderIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTransactionStatusByTerminalIdAndOrderIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getDiscountTransactionByDateCompletedEventHandler(object sender, getDiscountTransactionByDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDiscountTransactionByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDiscountTransactionByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getRefundTransactionWithCommissionByIdNewCompletedEventHandler(object sender, getRefundTransactionWithCommissionByIdNewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRefundTransactionWithCommissionByIdNewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRefundTransactionWithCommissionByIdNewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getTransactionByCustomerIdCompletedEventHandler(object sender, getTransactionByCustomerIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTransactionByCustomerIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTransactionByCustomerIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getTransactionByDiscountInquiryIdCompletedEventHandler(object sender, getTransactionByDiscountInquiryIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTransactionByDiscountInquiryIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTransactionByDiscountInquiryIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getCardsInfoCompletedEventHandler(object sender, getCardsInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCardsInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCardsInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getTransactionByIdFromArchiveCompletedEventHandler(object sender, getTransactionByIdFromArchiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTransactionByIdFromArchiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTransactionByIdFromArchiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getTransactionByBillIdAndPayIdCompletedEventHandler(object sender, getTransactionByBillIdAndPayIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTransactionByBillIdAndPayIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTransactionByBillIdAndPayIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getTransactionByIdCompletedEventHandler(object sender, getTransactionByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTransactionByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTransactionByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getTransactionByPayerIdCompletedEventHandler(object sender, getTransactionByPayerIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTransactionByPayerIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTransactionByPayerIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getRefundTransactionByRefrenceIdNewCompletedEventHandler(object sender, getRefundTransactionByRefrenceIdNewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRefundTransactionByRefrenceIdNewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRefundTransactionByRefrenceIdNewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getRefundTransactionWithCommissionByDateCompletedEventHandler(object sender, getRefundTransactionWithCommissionByDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRefundTransactionWithCommissionByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRefundTransactionWithCommissionByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getRefundTransactionByRefrenceIdCompleteFromArchiveCompletedEventHandler(object sender, getRefundTransactionByRefrenceIdCompleteFromArchiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRefundTransactionByRefrenceIdCompleteFromArchiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRefundTransactionByRefrenceIdCompleteFromArchiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getInstituteTransactionByDateCompletedEventHandler(object sender, getInstituteTransactionByDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getInstituteTransactionByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getInstituteTransactionByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getRefundTransactionByDateCompleteFromArchiveCompletedEventHandler(object sender, getRefundTransactionByDateCompleteFromArchiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRefundTransactionByDateCompleteFromArchiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRefundTransactionByDateCompleteFromArchiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getTransactionByTerminalGroupTypeNewCompletedEventHandler(object sender, getTransactionByTerminalGroupTypeNewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTransactionByTerminalGroupTypeNewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTransactionByTerminalGroupTypeNewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getBillPaymentHamrahAvalBANKCompletedEventHandler(object sender, getBillPaymentHamrahAvalBANKCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBillPaymentHamrahAvalBANKCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBillPaymentHamrahAvalBANKCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getPostDepositDraftByIbanCompletedEventHandler(object sender, getPostDepositDraftByIbanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPostDepositDraftByIbanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPostDepositDraftByIbanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void changeRequestCompletedEventHandler(object sender, changeRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class changeRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal changeRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getTerminalsInfoCompletedEventHandler(object sender, getTerminalsInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTerminalsInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTerminalsInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getRefundTransactionByDateCompleteCompletedEventHandler(object sender, getRefundTransactionByDateCompleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRefundTransactionByDateCompleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRefundTransactionByDateCompleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getRefundTransactionByOrderIdNewCompletedEventHandler(object sender, getRefundTransactionByOrderIdNewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRefundTransactionByOrderIdNewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRefundTransactionByOrderIdNewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getBillPaymentPSPCompletedEventHandler(object sender, getBillPaymentPSPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBillPaymentPSPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBillPaymentPSPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getTransactionStatusByIdFromArchiveCompletedEventHandler(object sender, getTransactionStatusByIdFromArchiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTransactionStatusByIdFromArchiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTransactionStatusByIdFromArchiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getTransactionByDiscountInquiryIdFromArchiveCompletedEventHandler(object sender, getTransactionByDiscountInquiryIdFromArchiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTransactionByDiscountInquiryIdFromArchiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTransactionByDiscountInquiryIdFromArchiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getTransactionByTerminalIdAndOrderIdCompletedEventHandler(object sender, getTransactionByTerminalIdAndOrderIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTransactionByTerminalIdAndOrderIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTransactionByTerminalIdAndOrderIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getRefundTransactionByOrderIdCompleteFromArchiveCompletedEventHandler(object sender, getRefundTransactionByOrderIdCompleteFromArchiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRefundTransactionByOrderIdCompleteFromArchiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRefundTransactionByOrderIdCompleteFromArchiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getPosTerminalRequestCompletedEventHandler(object sender, getPosTerminalRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPosTerminalRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPosTerminalRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getBillPaymentHamrahAvalPSPCompletedEventHandler(object sender, getBillPaymentHamrahAvalPSPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBillPaymentHamrahAvalPSPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBillPaymentHamrahAvalPSPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getRefundBalanceCompletedEventHandler(object sender, getRefundBalanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRefundBalanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRefundBalanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getTransactionByRRNAndTerminalIdCompletedEventHandler(object sender, getTransactionByRRNAndTerminalIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTransactionByRRNAndTerminalIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTransactionByRRNAndTerminalIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getRefundTransactionByDateCompletedEventHandler(object sender, getRefundTransactionByDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRefundTransactionByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRefundTransactionByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getUnsuccessfulTransactionsByDateCompletedEventHandler(object sender, getUnsuccessfulTransactionsByDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUnsuccessfulTransactionsByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUnsuccessfulTransactionsByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getGeneralBillInfoCompletedEventHandler(object sender, getGeneralBillInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGeneralBillInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getGeneralBillInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getRequestStatusCompletedEventHandler(object sender, getRequestStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRequestStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRequestStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getOfferTransactionByDateCompletedEventHandler(object sender, getOfferTransactionByDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getOfferTransactionByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getOfferTransactionByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getOnlineTransactionByDateCompletedEventHandler(object sender, getOnlineTransactionByDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getOnlineTransactionByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getOnlineTransactionByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getTransactionByDateCompletedEventHandler(object sender, getTransactionByDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTransactionByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTransactionByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getRefundTransactionByRefrenceIdCompleteCompletedEventHandler(object sender, getRefundTransactionByRefrenceIdCompleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRefundTransactionByRefrenceIdCompleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRefundTransactionByRefrenceIdCompleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getTransactionByCustomerIdNewCompletedEventHandler(object sender, getTransactionByCustomerIdNewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTransactionByCustomerIdNewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTransactionByCustomerIdNewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getTransactionStatusByIdCompletedEventHandler(object sender, getTransactionStatusByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTransactionStatusByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTransactionStatusByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getRefundTransactionByOrderIdCompletedEventHandler(object sender, getRefundTransactionByOrderIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRefundTransactionByOrderIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRefundTransactionByOrderIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getRefundTransactionByDateNewCompletedEventHandler(object sender, getRefundTransactionByDateNewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRefundTransactionByDateNewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRefundTransactionByDateNewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getTransactionByBillIdAndPayIdFromArchiveCompletedEventHandler(object sender, getTransactionByBillIdAndPayIdFromArchiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTransactionByBillIdAndPayIdFromArchiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTransactionByBillIdAndPayIdFromArchiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getTransactionByIdWithCardTypeCompletedEventHandler(object sender, getTransactionByIdWithCardTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTransactionByIdWithCardTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTransactionByIdWithCardTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getDepositDraftByIbanCompletedEventHandler(object sender, getDepositDraftByIbanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDepositDraftByIbanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDepositDraftByIbanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getMobileTransactionsCompletedEventHandler(object sender, getMobileTransactionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMobileTransactionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMobileTransactionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getRefundTransactionWithCommissionByIdCompletedEventHandler(object sender, getRefundTransactionWithCommissionByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRefundTransactionWithCommissionByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRefundTransactionWithCommissionByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getTransactionByIdForRefundCompletedEventHandler(object sender, getTransactionByIdForRefundCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTransactionByIdForRefundCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTransactionByIdForRefundCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getTransactionInquiryByCustomerCompletedEventHandler(object sender, getTransactionInquiryByCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTransactionInquiryByCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTransactionInquiryByCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getChangeAccountInquiryRequestStatusCompletedEventHandler(object sender, getChangeAccountInquiryRequestStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getChangeAccountInquiryRequestStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getChangeAccountInquiryRequestStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591